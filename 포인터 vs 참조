포인터 vs 참조
성능 : 똑같다.
편의성 : 참조
1) 편의성 관련 
편의성이 좋다는게 꼭 장점만은 아니다.
포인터는 주소를 넘기니 확실하게 원본을 넘긴다는 힌트를 줄 수 있다.
참조는 자연스럽게 모르고 지나칠수도 있다.
ex) 마음대로 고친다면?
const를 사용해서 이런 마음대로 고치는 부분 개선 가능!!
* 기준으로 앞에 붙이느냐, 뒤에 붙이느냐에 따라 달라짐
const int* ptr ,int* const ptr
(1)* const
바구니의 내용물(주소)을 바꿀 수 없음 
주소값을 갖는 바구니 -> 이 주소값이 고정이다.
(2)const *
변수가 가리키는 바구니의 내용물을 바꿀 수 없음 
'원격' 바구니의 내용물을 바꿀 수 없음
if)둘다 바꿀수 없게 하고싶다면 const * const 를 하면된다!!
2)초기화 여부
참조 타입은 바구니의 2번째 이름 -> 참조하는 대상이 없으면 안됨
포인터는 그냥 어떤 주소라는 의미 -> 대상이 실존하지 않을 수 있음

포인터와 참조는 취향 차이!!
